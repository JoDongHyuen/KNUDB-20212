회원가입 - 트랜잭션 처리

점주(Owner) 회원가입 시 점주의 가게(Store)도 동시에 생성되어야 합니다.
(Onwer 테이블이 Store 테이블을 참조하고 있기 때문에)
이 과정에서 예기치 못한 에러가 발생할 시, 이를 제어하기 위해 Transaction을 구현했습니다.

회원가입이 성공적으로 진행되었을 때, '회원가입완료'라는 alert이 출력됩니다.
회원가입이 실패했을 때, '회원가입실패'라는 alert이 출력되고 executeUpdate된 모든 Query문들을 rollback 시켰습니다.

아래에 코드를 첨부했습니다. (registerCheck.jsp 162번째 라인부터)
conn.setAutoCommit(false);//transaction 추가			
try{
	String query = "insert into information values('"
		+ email + "', '" + passWord + "', 'owner')";
	int res = stmt.executeUpdate(query);
			
	query = "select COUNT(*) from STORE";
	rs = stmt.executeQuery(query);
	int lastNum = 0;
	while(rs.next()){	
		lastNum = rs.getInt(1);
		break;
	}
	lastNum++;
	//store 에 미리 breg_number 추가 -> 무결성 위약조건 때문에
	query = "insert into store values (" + lastNum
		+ ", '가게 이름 입력', '', 0, '주소 입력')"; // 일단 아무 숫자, 값 넣음 -> update 할때는 이것을 update 함
	res = stmt.executeUpdate(query);
				
				
	query = "insert into owner values (" + lastNum + ", '"
			+ fname.substring(0,1) + "', '"
			+ fname.substring(1,3) + "', '"
			+ phone + "', '" + email + "', '"
			+ gender + "', " + age + ")";
				
	res = stmt.executeUpdate(query);
				
	conn.commit();//transaction 추가
	conn.setAutoCommit(true);
				
	script.println("<script type='text/javascript'>");
	script.println("alert('회원가입완료');");
	script.println("history.go(-2);");
	script.println("</script>");
	script.flush();
}
			
	catch(Exception e){
		conn.rollback(); //trnasaction rollback 추가
		script.println("<script type='text/javascript'>");
		script.println("alert('회원가입실패');");
		script.println("history.go(-1);");
		script.println("</script>");
		script.flush();
		e.printStackTrace();
}

~~~~~~~~~

예약 좌석 - 동시성 제어

예약을 할 때, 좌석수를 넘어가면 예약이 안되도록 설정을 하였습니다.

저희 팀에서 store.seats_number 에 좌석수가 정해져 있습니다.
select 문으로 seats_number 을 읽어옵니다.

cust_books_str 은 고객이 가게에 예약 되어 있는 상태를 보여주는 테이블입니다
cust_books_str 에서 헤당 가게 bnum 을 입력하면 몇개의 예약이 있는지 counting을 합니다.

그 counting 과 seats_number 를 비교하여
counting 의 갯수(현재 가게에 예약되어 있는 고객의 수)가 seats_number 보다 적으면 예약이 가능하도록 설정하였고, 같거나 많으면 헤당 가게에 예약이 꽉 찼습니다. 라는 메세지를 띄우도록 설정하였습니다.

아래에 코드를 첨부하였습니다.(reservation.jsp 85번째 라인부터)


try{
	if(num <= seatNum){ // 좌석수 >= 예약 -> ok
		stmt.executeUpdate(sql);
		}
	else{ // 예약이 안되도록
		conn.rollback();
		throw new SQLException();
	}
			
	out.println("<script type='text/javascript'>");
	out.println("alert('예약되었습니다!!');");
	out.println("</script>");
			
	response.sendRedirect("reserveCustomer.jsp");
			
	}catch (Exception e){
		conn.rollback();
		out.println("<script type='text/javascript'>");
		out.println("alert('해당 가게의 예약이 찼습니다.');");
		out.println("history.back();");
		out.println("</script>");

		e.printStackTrace();
	}finally{
			
		stmt.close();
		rs.close();
		conn.close();
	}		